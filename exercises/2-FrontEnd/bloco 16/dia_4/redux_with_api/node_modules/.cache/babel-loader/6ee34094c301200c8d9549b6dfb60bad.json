{"ast":null,"code":"import { GET_ISS_LOCATION, GET_ISS_LOCATION_SUCCESS, GET_ISS_LOCATION_ERROR } from '../actions';\nconst INITIAL_ISS_LOCATION_STATE = {\n  latitude: -20.950199,\n  longitude: -48.478931,\n  error: null,\n  isLoading: false\n};\n\nfunction issLocation(state = INITIAL_ISS_LOCATION_STATE, action) {\n  switch (action.type) {\n    case GET_ISS_LOCATION:\n      return { ...state,\n        isLoading: true\n      };\n\n    case GET_ISS_LOCATION_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        latitude: action.payload.latitude,\n        longitude: action.payload.longitude\n      };\n\n    case GET_ISS_LOCATION_ERROR:\n      return { ...state,\n        isLoading: false,\n        error: action.payload.error\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default issLocation;","map":{"version":3,"sources":["/mnt/Linux - Home/OneDrive/Aulas/Trybe/trybe-exercises/exercises/2-FrontEnd/bloco 16/dia_4/redux_with_api/src/reducers/issLocation.js"],"names":["GET_ISS_LOCATION","GET_ISS_LOCATION_SUCCESS","GET_ISS_LOCATION_ERROR","INITIAL_ISS_LOCATION_STATE","latitude","longitude","error","isLoading","issLocation","state","action","type","payload"],"mappings":"AAAA,SACEA,gBADF,EAEEC,wBAFF,EAGEC,sBAHF,QAKO,YALP;AAOA,MAAMC,0BAA0B,GAAG;AACjCC,EAAAA,QAAQ,EAAE,CAAC,SADsB;AAEjCC,EAAAA,SAAS,EAAE,CAAC,SAFqB;AAGjCC,EAAAA,KAAK,EAAE,IAH0B;AAIjCC,EAAAA,SAAS,EAAE;AAJsB,CAAnC;;AAOA,SAASC,WAAT,CAAqBC,KAAK,GAAGN,0BAA7B,EAAyDO,MAAzD,EAAiE;AAC/D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKX,gBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKN,wBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,SAAS,EAAE,KAFN;AAGLH,QAAAA,QAAQ,EAAEM,MAAM,CAACE,OAAP,CAAeR,QAHpB;AAILC,QAAAA,SAAS,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAJrB,OAAP;;AAMF,SAAKH,sBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,SAAS,EAAE,KAFN;AAGLD,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAHjB,OAAP;;AAKF;AACE,aAAOG,KAAP;AApBJ;AAsBD;;AAED,eAAeD,WAAf","sourcesContent":["import {\n  GET_ISS_LOCATION,\n  GET_ISS_LOCATION_SUCCESS,\n  GET_ISS_LOCATION_ERROR,\n  \n} from '../actions';\n\nconst INITIAL_ISS_LOCATION_STATE = {\n  latitude: -20.950199,\n  longitude: -48.478931,\n  error: null,\n  isLoading: false, \n}\n\nfunction issLocation(state = INITIAL_ISS_LOCATION_STATE, action) {\n  switch(action.type) {\n    case GET_ISS_LOCATION:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case GET_ISS_LOCATION_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        latitude: action.payload.latitude,\n        longitude: action.payload.longitude,\n      };\n    case GET_ISS_LOCATION_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload.error,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default issLocation;"]},"metadata":{},"sourceType":"module"}